
- name:  enable cluster
  tags: 'couchdb-cluster'
  become: yes
  shell: 'curl -X POST -H "Content-Type: application/json" http://admin:password@{{ inventory_hostname }}:5984/_cluster_setup -d "{\"action\": \"enable_cluster\", \"bind_address\":\"0.0.0.0\", \"username\": \"admin\", \"password\":\"password\", \"port\": \"5984\", \"node_count\": \"3\"}"'
  loop: "{{ groups['database']  }}"
#  when: item!=inventory_hostname

- name: Pause for 300 seconds waiting couchDB running up
  tags: 'couchdb-cluster'
  pause: minutes=2

- name: add nodes to CouchDB cluster
  tags: couchdb-cluster
  become: yes
  shell: 'curl -X POST -H "Content-Type: application/json" http://admin:password@{{ inventory_hostname }}:5984/_cluster_setup -d "{\"action\": \"add_node\", \"host\":\"{{ item }}\", \"port\": \"5984\", \"username\": \"admin\", \"password\":\"password\"}"'
  loop: "{{ groups['database']  }}"

#
#- name: setup couchdb cluster | step 2
#  become: yes
#  uri:
#    url: "http://{{ inventory_hostname }}:5984/_cluster_setup"
#    method: POST
#    user: "{{ db_user }}"
#    password:  "{{ db_password }}"
#    force_basic_auth: yes
#    headers:
#      Content-Type: application/json
#    body_format: json
#    body:
#      action: add_node
#      host: "{{ item }}"
#      port: "5984"
#      username: "{{ db_user }}"
#      password: "{{ db_password }}"
#  loop: "{{ groups['database'] }}"
#  ignore_errors: yes

- name: setup couchdb cluster | step 2.5
  become: yes
  uri:
    url: http://{{ groups['data-server'][0] }}:{{db_port}}/
    status_code: 200,201
    method: GET
    user: "{{ db_user }}"
    password:  "{{ db_password }}"
    force_basic_auth: yes
    return_content: yes


- name: steup couchdb cluster | step 3 -- finish
  become: yes
  uri:
    url: http://{{ groups['data-server'][0] }}:{{ db_port }}/{{ cluster_name }}
    status_code: 201
    method: POST
    user: "{{ db_user }}"
    password:  "{{ db_password }}"
    force_basic_auth: yes
    return_content: yes
    body_format: json
    body: "{\"action\": \"finish_cluster\"}"
    headers:
      Content-Type: "application/json"
  ignore_errors: yes


- name: create _user database
  uri:
    url: http://{{ansible_host}}:5984/_users
    force_basic_auth: yes
    user: "{{ db_user }}"
    password: "{{ db_password }}"
    method: PUT
    status_code: 201,412
  register: result


- name: Install and configure CouchDB Photon plugin
  shell: |
    couch="-H Content-Type:application/json -X PUT http://{{ db_user }}:{{ db_password }}@{{inventory_hostname}}:5984"
    curl $couch/photon
    curl https://raw.githubusercontent.com/ermouth/couch-photon/master/photon.json | \
    curl $couch/photon/_design/photon -d @-
    curl $couch/photon/_security -d '{}'
    curl $couch/_node/_local/_config/csp/attachments_enable -d '"false"'
    curl $couch/_node/_local/_config/chttpd_auth/same_site -d '"lax"'
  args:
    executable: /bin/bash


#
#- name: Check connection
#  args:
#    warn: yes
#  shell: >
#    curl "http://{{ db_user }}:{{ db_password }}@{{ groups['workers'][0]}}:{{ db_port }}/_cluster_setup"
#  register: connection_check
#
#- name: check data
#  debug:
#    var: connection_check
#
#
#- name: Enable clustering on first node
#  uri:
#    url: "http://{{ groups['workers'][0] }}:5984/_cluster_setup"
#    url_username: "{{db_user}}"
#    url_password: "{{db_password}}"
#    method: POST
#    body_format: json
#    body:
#      action: "enable_cluster"
#      bind_address: "0.0.0.0"
#      username: "{{ db_user }}"
#      password: "{{ db_password }}"
#      node_count: "{{ groups['workers'] | length }}"
#  when: inventory_hostname == groups['workers'][0]
#
#
#- name: Add nodes to cluster
#  uri:
#    url: "http://{{db_user }}:{{db_password }}@{{ groups['workers'][0] }}:5984/_cluster_setup"
#    method: POST
#    body_format: json
#    body:
#      action: "add_node"
#      host: "{{ inventory_hostname }}"
#      port: "5984"
#      username: "{{ db_user }}"
#      password: "{{ db_password }}"
#    status_code: 201
#  when: inventory_hostname != groups['workers'][0]